<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EdgeOne Pages 验证网站</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.6;
        }
        .status {
            padding: 15px;
            margin: 15px 0;
            border-radius: 5px;
            border-left: 4px solid;
        }
        .success {
            background: #f0fff4;
            border-color: #38a169;
            color: #2d3748;
        }
        .error {
            background: #fff5f5;
            border-color: #e53e3e;
            color: #742a2a;
        }
        .loading {
            background: #fffaf0;
            border-color: #dd6b20;
            color: #744210;
        }
        button {
            background: #3182ce;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin: 5px;
        }
        button:hover {
            background: #2c5aa0;
        }
        .test-section {
            margin: 20px 0;
            padding: 15px;
            border: 1px solid #e2e8f0;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <h1>🚀 EdgeOne Pages 验证网站</h1>
    <p>这是一个最小验证配置，用于测试 EdgeOne Pages 部署功能</p>
    
    <div class="status success" id="staticStatus">
        ✅ 静态页面加载成功
    </div>
    
    <div class="status loading" id="apiStatus">
        🔄 检测API连接中...
    </div>
    
    <div class="test-section">
        <h3>API 测试</h3>
        <button onclick="testAPI()">测试 /api/test</button>
        <button onclick="testCallback()">测试 /api/callback</button>
        <button onclick="testOAuth()">测试 OAuth 流程</button>
        
        <div id="testResult" style="margin-top: 15px;"></div>
    </div>
    
    <div class="test-section">
        <h3>环境信息</h3>
        <div id="envInfo">
            <p>用户代理: <span id="userAgent"></span></p>
            <p>当前URL: <span id="currentUrl"></span></p>
        </div>
    </div>

    <script>
        // 显示环境信息
        document.getElementById('userAgent').textContent = navigator.userAgent;
        document.getElementById('currentUrl').textContent = window.location.href;
        
        // 测试API端点
        async function testAPI() {
            const resultDiv = document.getElementById('testResult');
            resultDiv.innerHTML = '<div class="status loading">测试中...</div>';
            
            try {
                const response = await fetch('/api/test');
                const data = await response.json();
                
                resultDiv.innerHTML = `
                    <div class="status success">
                        ✅ API测试成功
                        <pre>${JSON.stringify(data, null, 2)}</pre>
                    </div>
                `;
                
                // 更新API状态
                document.getElementById('apiStatus').className = 'status success';
                document.getElementById('apiStatus').innerHTML = '✅ API连接成功';
            } catch (error) {
                resultDiv.innerHTML = `
                    <div class="status error">
                        ❌ API测试失败: ${error.message}
                    </div>
                `;
            }
        }
        
        // 测试回调端点
        async function testCallback() {
            const resultDiv = document.getElementById('testResult');
            resultDiv.innerHTML = '<div class="status loading">测试中...</div>';
            
            try {
                const response = await fetch('/api/callback');
                const data = await response.json();
                
                resultDiv.innerHTML = `
                    <div class="status success">
                        ✅ 回调端点测试成功
                        <pre>${JSON.stringify(data, null, 2)}</pre>
                    </div>
                `;
            } catch (error) {
                resultDiv.innerHTML = `
                    <div class="status error">
                        ❌ 回调端点测试失败: ${error.message}
                    </div>
                `;
            }
        }
        
        // 测试OAuth流程
        function testOAuth() {
            const resultDiv = document.getElementById('testResult');
            resultDiv.innerHTML = '<div class="status loading">准备OAuth测试...</div>';
            
            // 模拟OAuth流程
            const clientId = '63682119960362288341255487813694.app.coze';
            const redirectUri = window.location.origin + '/api/callback';
            
            // 构建授权URL
            const authUrl = new URL('https://api.coze.com/oauth/authorize');
            authUrl.searchParams.append('client_id', clientId);
            authUrl.searchParams.append('redirect_uri', redirectUri);
            authUrl.searchParams.append('response_type', 'code');
            authUrl.searchParams.append('state', 'test_' + Date.now());
            
            resultDiv.innerHTML = `
                <div class="status success">
                    ✅ OAuth URL构建成功
                    <p>授权URL: <a href="${authUrl.href}" target="_blank">${authUrl.href}</a></p>
                    <p>在实际使用中，用户将被重定向到此URL进行授权</p>
                </div>
            `;
        }
        
        // 页面加载后自动测试API
        setTimeout(testAPI, 1000);
    </script>
</body>
</html>
